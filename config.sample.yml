data:
    data: [["../B02DstmD0Kp/data/dt_DstDKRun1.dat"],["../B02DstmD0Kp/data/dt_DstDKRun2.dat"],["../B02DstmD0Kp/data/dt_Dst_K3piRun1.dat"],["../B02DstmD0Kp/data/dt_Dst_K3piRun2.dat"],["../B02DstmD0Kp/data/dt_D_K3piRun1.dat"],["../B02DstmD0Kp/data/dt_D_K3piRun2.dat"]]
    data_charge: [["../B02DstmD0Kp/data/dt_DstDKRun1_cc.dat"],["../B02DstmD0Kp/data/dt_DstDKRun2_cc.dat"],["../B02DstmD0Kp/data/dt_Dst_K3piRun1_cc.dat"],["../B02DstmD0Kp/data/dt_Dst_K3piRun2_cc.dat"],["../B02DstmD0Kp/data/dt_D_K3piRun1_cc.dat"],["../B02DstmD0Kp/data/dt_D_K3piRun2_cc.dat"]]
    
    phsp: [["../B02DstmD0Kp/data/PHSP_DstDKRun1.dat"],["../B02DstmD0Kp/data/PHSP_DstDKRun2.dat"],["../B02DstmD0Kp/data/PHSP_Dst_K3piRun1.dat"],["../B02DstmD0Kp/data/PHSP_Dst_K3piRun2.dat"],["../B02DstmD0Kp/data/PHSP_D_K3piRun1.dat"],["../B02DstmD0Kp/data/PHSP_D_K3piRun2.dat"]]
    phsp_noeff: ["../B02DstmD0Kp/data/PHSP30w.dat"]
    
    bg: [["../B02DstmD0Kp/data/sb_DstDKRun1.dat"],["../B02DstmD0Kp/data/sb_DstDKRun2.dat"],["../B02DstmD0Kp/data/sb_Dst_K3piRun1.dat"],["../B02DstmD0Kp/data/sb_Dst_K3piRun2.dat"],["../B02DstmD0Kp/data/sb_D_K3piRun1.dat"],["../B02DstmD0Kp/data/sb_D_K3piRun2.dat"]]
    bg_charge: [["../B02DstmD0Kp/data/sb_DstDKRun1_cc.dat"],["../B02DstmD0Kp/data/sb_DstDKRun2_cc.dat"],["../B02DstmD0Kp/data/sb_Dst_K3piRun1_cc.dat"],["../B02DstmD0Kp/data/sb_Dst_K3piRun2_cc.dat"],["../B02DstmD0Kp/data/sb_D_K3piRun1_cc.dat"],["../B02DstmD0Kp/data/sb_D_K3piRun2_cc.dat"]]
    bg_weight: [0.571, 0.585, 0.590, 0.587, 0.578, 0.591]
    
    inmc: [["../B02DstmD0Kp/data/oPHSP_DstDKRun1.dat"],["../B02DstmD0Kp/data/oPHSP_DstDKRun2.dat"],["../B02DstmD0Kp/data/oPHSP_Dst_K3piRun1.dat"],["../B02DstmD0Kp/data/oPHSP_Dst_K3piRun2.dat"],["../B02DstmD0Kp/data/oPHSP_D_K3piRun1.dat"],["../B02DstmD0Kp/data/oPHSP_D_K3piRun2.dat"]]
    inject_ratio: 0.00
    #float_inmc_ratio_in_pdf: False
    #random_z: True
    dat_order: [C, D, E, F] # D0 K+ D0_D*- pi-_D*-
    r_boost: True
    use_tf_function: False
    #cached_int: False


decay:
    A:
    - [R_CD, B, model: default, p_break: True]
    - [R_BD, C, model: default, p_break: True, curve_style: "orange"]
    - [R_BC, D, model: default, p_break: True, curve_style: "orange"]
    # BW
    - [Ds1_2700p, B, model: default, curve_style: "g-", p_break: True]
    - [Ds1_2860p, B, model: default, curve_style: "g--", p_break: True]
    # KM
    - [Ds1_2700_2860, B, model: default, p_break: True, has_barrier_factor: True]
    # MI
    - [DK(1-)SP, B, p_break: True, curve_style: "g-", l_list: [0]]
    - [DK(1-)PP, B, p_break: True, curve_style: "c-.", l_list: [1]]
    - [DK(1-)DP, B, p_break: True, curve_style: "b--", l_list: [2]]
    
    - [NR(D*K)SP, C, p_break: True, curve_style: "g-", l_list: [0]]
    - [NR(D*K)PS, C, p_break: True, curve_style: "g--", l_list: [1]]
    - [NR(D*K)PD, C, p_break: True, curve_style: "g-.", l_list: [1]]
    - [NR(D*K)PP, C, p_break: True, curve_style: "g:", l_list: [1]]
    - [NR(DK)PS, B, p_break: True, curve_style: "b-", l_list: [1]]
    - [NR(DK)SP, B, p_break: True, curve_style: "b--", l_list: [0]]
    - [NR(DK)PP, B, p_break: True, curve_style: "b-.", l_list: [1]]
    - [NR(DK)DP, B, p_break: True, curve_style: "b:", l_list: [2]]
    - [NR(D*D)SP, D, p_break: True, curve_style: "c-", l_list: [0]]
    - [NR(D*D)PS, D, p_break: True, curve_style: "c--", l_list: [1]]
    - [NR(D*D)PD, D, p_break: True, curve_style: "c-.", l_list: [1]]
    - [NR(D*D)PP, D, p_break: True, curve_style: "c:", l_list: [1]]

    - [Ds1_2700_SP, B, model: default, p_break: True, l_list: [0]]
    - [Ds1_2700_PP, B, model: default, p_break: True, l_list: [1]]
    - [Ds1_2700_DP, B, model: default, p_break: True, l_list: [2]]
    - [Zc_3900_PS, D, model: default, p_break: True, l_list: [1], curve_style: "orange"]
    - [Zc_3900_PD, D, model: default, p_break: True, l_list: [1], curve_style: "magenta"]


    R_CD: [C, D]
    R_BD: [B, D]
    R_BC: [B, C]
    # BW
    Ds1_2700p: [C, D, has_barrier_factor: True]
    Ds1_2860p: [C, D, has_barrier_factor: True]
    # KM
    Ds1_2700_2860: [C, D, has_barrier_factor: False]
    # MI
    DK(1-)SP: [C, D, l_list: [1]]
    DK(1-)PP: [C, D, l_list: [1]]
    DK(1-)DP: [C, D, l_list: [1]]
    
    NR(D*K)SP: [B, D, l_list: [1]]
    NR(D*K)PS: [B, D, l_list: [0]]
    NR(D*K)PD: [B, D, l_list: [2]]
    NR(D*K)PP: [B, D, l_list: [1]]
    NR(DK)PS: [C, D, l_list: [0]]
    NR(DK)SP: [C, D, l_list: [1]]
    NR(DK)PP: [C, D, l_list: [1]]
    NR(DK)DP: [C, D, l_list: [1]]
    NR(D*D)SP: [B, C, l_list: [1]]
    NR(D*D)PS: [B, C, l_list: [0]]
    NR(D*D)PD: [B, C, l_list: [2]]
    NR(D*D)PP: [B, C, l_list: [1]]

    Ds1_2700_SP: [C, D, l_list: [1]]
    Ds1_2700_PP: [C, D, l_list: [1]]
    Ds1_2700_DP: [C, D, l_list: [1]]
    Zc_3900_PS: [B, C, l_list: [0]]
    Zc_3900_PD: [B, C, l_list: [2]]

    B: [E, F, has_barrier_factor: False]


# `particle` describe the particle included
particle:
    $top:
        A: # B0
            J: 0
            P: -1
            #spins: [-1,1]

    $finals:
        C: # D0
            J: 0
            P: -1
        D: # K+
            J: 0
            P: -1
        E: # D0_D*-
            J: 0
            P: -1
        F: # pi-_D*-
            J: 0
            P: -1

    B: {J: 1, P: -1, m0: 2.01026, model: one} # D*-

    $include: Resonances.yml
    R_BD: []
      #- DstarK
      #- X1_2900
    R_BC: []
      #- Zc_Xm
      #- Zc_3900m
      #- Zc_4200m
      #- Zc_4430m
      #- X_4020m
      #- X_4050m
      #- X_4055m
      #- X_4250m
    R_CD:
      #- Dsp
      - Ds2_2573p
      - Ds3_2860p
      #- Ds2_3040p
    # BW
    Ds1_2700p: [] #{J: 1, Par: -1, m0: 2.7083, m_sigma: 0.004, m_max: 2.7483, m_min: 2.6683,
                #float: , gauss_constr: , g0: 0.12, g_sigma: 0.011, g_max: 0.35, g_min: 0.05}
    Ds1_2860p: [] #{J: 1, Par: -1, m0: 2.859, m_sigma: 0.027, m_max: 3.129, m_min: 2.609,
                #float: , gauss_constr: , g0: 0.159, g_sigma: 0.08, g_max: 0.8, g_min: 0.0001}
    # KM
    Ds1_2700_2860: {J: 1, P: -1, m0: 2.83, model: KmatrixDK,
                    params: {
                        mass1: 2.7083, mass2: 2.859, #width1: 0.12, width2: 0.159,
                        mass1_free: True, mass2_free: True, mass1_range: [2.6, 2.8], mass2_range: [2.8, 3.1],

                        G1a: 0.063, G1a_free: True, G1r: 0.91, G1r_free: True,
                        G1r_sigma: 0.18,
                        G1r_constr: True,

                        G2a: 0.076, G2a_free: True, G2r: 1.10, G2r_free: True,
                        G2r_sigma: 0.24,
                        G2r_constr: True,

                        beta1: [1,0], beta1_free: False, beta2: [1,0], beta2_free: True,}}
    # MI
    DK(1-)SP: [] #{J: 1, P: -1, mass: 2.83, model: spline_c, points: [2.2, 2.35, 2.45, 2.55, 2.65, 2.75, 2.85, 2.95, 3.05, 3.2, 3.4]}
    DK(1-)PP: [] #{J: 1, P: -1, mass: 2.83, model: spline_c, points: [2.2, 2.35, 2.45, 2.55, 2.65, 2.75, 2.85, 2.95, 3.05, 3.2, 3.4]}
    DK(1-)DP: [] #{J: 1, P: -1, mass: 2.83, model: spline_c, points: [2.2, 2.35, 2.45, 2.55, 2.65, 2.75, 2.85, 2.95, 3.05, 3.2, 3.4]}

    NR(D*K)SP: [] #{J: 0, P: -1, m0: 3.0, model: one,}
    NR(D*K)PS: [] #{J: 1, P: 1, m0: 3.0, model: one,}
    NR(D*K)PD: [] #{J: 1, P: 1, m0: 3.0, model: one}
    NR(D*K)PP: [] #{J: 1, P: -1, m0: 3.0, model: one,}
    NR(DK)PS: {J: 0, P: 1, m0: 2.83, model: exp2, params: {a: 0.1, a_free: True}}
    NR(DK)SP: {J: 1, P: -1, m0: 2.83, model: one}
    NR(DK)PP: [] #{J: 1, P: -1, m0: 2.83, model: one}
    NR(DK)DP: [] #{J: 1, P: -1, m0: 2.83, model: one}
    NR(D*D)SP: [] #{J: 0, P: -1, m0: 4.36, model: one}
    NR(D*D)PS: [] #{J: 1, P: 1, m0: 4.36, model: one}
    NR(D*D)PD: [] #{J: 1, P: 1, m0: 4.36, model: one}
    NR(D*D)PP: [] #{J: 1, P: -1, m0: 4.36, model: one}

    Ds1_2700_SP: [] #{J: 1, P: -1, m0: 2.7083, g0: 0.12}
    Ds1_2700_PP: [] #{J: 1, P: -1, m0: 2.7083, g0: 0.12}
    Ds1_2700_DP: [] #{J: 1, P: -1, m0: 2.7083, g0: 0.12}
    Zc_3900_PS: [] #{J: 1, P: 1, m0: 3.8822, g0: 0.0265, bw_l: 0}
    Zc_3900_PD: [] #{J: 1, P: 1, m0: 3.8822, g0: 0.0265, bw_l: 0}
    Zc_4430_PS: [] #{J: 1, P: 1, m0: 4.478, g0: 0.181, bw_l: 0}
    Zc_4430_PD: [] #{J: 1, P: 1, m0: 4.478, g0: 0.181, bw_l: 0}


# constrains for params [WIP]
constrains:
    particle: null
    decay: {fix_chain_idx: 0, fix_chain_val: 1}


# plot describe the configuration of plotting 1-d data distribution
plot:
    # plot configuration TODO
    combine_plot: True
    config:
        bins: 100
    # invariant mass
    mass: # B: D^{*-} C: D^0 D: K^+
        R_CD:
            # label of display
            # use `$$` for latex math
            display: "$M_{D^0K^+}$"
            #legend: False
            #trans: x*x
            #units: "$GeV^2$"
            #upper_ylim: 250
        R_BD:
            display: "$M_{D^{*-}K^+}$"
            #legend: False
            #trans: x*x
            #units: "$GeV^2$"
            #upper_ylim: 90
        R_BC:
            display: "$M_{D^{*-}D^0}$"
            #legend: False
            #trans: x*x
            #units: "$GeV^2$"
            #upper_ylim: 110
    # helicity angle
    angle:
        # each entry is `particle[/number]` means the decay of particle, number is the order.
        A/R_CD:
            # include "alpha, cos(beta), gamma", # add `cos` for cos(beta)
            alpha:
                display: "$\\phi_{D^0K^+}$" # the default is "A/1:$\alpha$"
            cos(beta):
                display: "$\\cos(\\theta_{D^0K^+})$" # the default is "A/1:$\beta$"
                range: [-1, 1] # range for plot
        R_CD/C:
            alpha:
                display: "$\\phi^{D^0K^+}_{D^0}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^0K^+}_{D^0})$"
        R_CD/B/E:
            alpha:
                display: "$\\phi^{D^{*-}_{B^0}}_{D^0_{D^{*-}}}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^{*-}_{B^0}}_{D^0_{D^{*-}}})$"

        A/R_BD:
            alpha:
                display: "$\\phi_{D^{*-}K^+}$"
            cos(beta):
                display: "$\\cos(\\theta_{D^{*-}K^+})$"
        R_BD/B:
            alpha:
                display: "$\\phi^{D^{*-}K^+}_{D^{*-}}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^{*-}K^+}_{D^{*-}})$"
        R_BD/B/E:
            alpha:
                display: "$\\phi^{D^{*-}_{D^{*-}K^+}}_{D^0_{D^{*-}}}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^{*-}_{D^{*-}K^+}}_{D^0_{D^{*-}}})$"

        A/R_BC:
            alpha:
                display: "$\\phi_{D^{*-}D^0}$"
            cos(beta):
                display: "$\\cos(\\theta_{D^{*-}D^0})$"
        R_BC/B:
            alpha:
                display: "$\\phi^{D^{*-}D^0}_{D^{*-}}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^{*-}D^0}_{D^{*-}})$"
        R_BC/B/E:
            alpha:
                display: "$\\phi^{D^{*-}_{D^{*-}D^0}}_{D^0_{D^{*-}}}$"
            cos(beta):
                display: "$\\cos(\\theta^{D^{*-}_{D^{*-}D^0}}_{D^0_{D^{*-}}})$"
    # 2D plot
    #2Dplot:
    #    m_R_CD & m_R_BC:
    #        display: "$M_{D^0K^+}^2$ vs $M_{D^{*-}D^0}^2$"
    #        plot_figs: ["fitted"]
